<%
String gravatarEmail = null;
String fullName = null;
if(context != null) {
    // Retrieve email for the current user
    KSSamplePeople samplePerson = KSSamplePeople.findByUsername(context, context.getUserName());
    if(samplePerson != null) {
        gravatarEmail = samplePerson.getEmail();
        fullName = samplePerson.getFullName();
    }
%>
<a class="profile" href="javascript:void(0)" data-target="div.user-card">
    <i class="gravatar-icon"></i>
</a>
<div class="user-card hide" aria-hidden="true">
    <div class="wrap">
        <a class="user">
        </a>
        <div class="information">
            <div class="name">
                <%= fullName%>
            </div>
            <div class="email">
                <%= gravatarEmail%>
            </div>
        </div>
    </div>
    <div class="wrap">
        <label for="preferred-language">Preferred Language</label>
        <select name="preferred-language" id="preferred-language">
        </select>
    </div>
    <div class="actions background-gray-lightest">
        <div class="sign-out">
             <% if (logoutEnabled) {%>
                <a href="<%= bundle.getProperty("logoutUrl")%>" class="background-grey-lightest color-gray-dark color-hover-gray-darkest">   
                    <%=ThemeLocalizer.getString(commonResourceBundle,"Sign Out")%>
                </a>
            <% } %>
        </div>
    </div>
</div>
<script type="text/javascript">
(function($, _) {
    $(function() {
        // Add gravatar image to ui
        BUNDLE.common.gravatar($.trim('<%= gravatarEmail %>'), 'i.gravatar-icon');
        BUNDLE.common.gravatar($.trim('<%= gravatarEmail %>'), 'div.user-card a.user');
        // Setup parameters for menus
        var parentSelector = 'header.main';
        var triggerSelector = 'a.profile';
        var menuSelector = 'div.user-card';
        var languageSelector = '#preferred-language';
        // Initialize menus
        BUNDLE.common.enableHeadMenus({
            'parentSelector': parentSelector,
            'triggerSelector': triggerSelector,
            'menuSelector': menuSelector,
            initializeCallback: function() {
                // Determine if package configuration available and build links
                if(BUNDLE.config.packages) {
                    // Define userProfile link by trying to get the first one found from the package's links
                    var userProfile = _.first(_.compact(_.pluck(_.pluck(BUNDLE.config.packages, 'links'), 'userProfile')));
                    // Define url
                    var url = BUNDLE.config['displayPageUrlSlug'] + userProfile['displayName'];
                    // Define params if not defined
                    var params = userProfile.params || {};
                    // Check size and append url params
                    if(_.size(params) > 0) { url = url + '&' + $.param(params, true); }
                    // Define user profile anchor tag attributes
                    var userProfileAttributes = {
                        'href': url,
                        'aria-label': userProfile.description
                    };
                    // Build href user profile link
                    var profileWrap = $('<div>').addClass('profile').append(
                        $('<a>').addClass('btn btn-primary').attr(userProfileAttributes).text(userProfile.label)
                    );
                    // Append to user card
                    $(menuSelector).find('div.information').append(profileWrap);
                    // Add attributes to image
                    $(menuSelector).find('a.user').attr(userProfileAttributes);

                    // Define var that will contain the locales for the select dropdown
                    var localeList = {};
                    // Pluck only the "languages" from config.packages
                    _.each(_.compact(_.pluck(BUNDLE.config.packages, 'languages')), function(language) {
                        // Loop through the language's properties and add to hash for uniqueness
                        _.each(language, function(language, locale) {
                            localeList[locale] = language;
                        });
                    });
                    // Add unique language to select list
                    _.each(localeList, function(language, locale) {
                        // Define option
                        var option = $('<option>').attr('value', locale).text(language);
                        // Match current configed locale with locale in list to
                        // make a match for determing the selected attribute
                        if(locale === BUNDLE.config.preferredLocale) {
                            option.attr('selected', 'selected');
                        }
                        // Append language option to select menus
                        $(languageSelector).append(
                            $('<option>').attr('value', locale).text(language)
                        );
                    });
                    $(languageSelector).val(BUNDLE.config.preferredLocale);
                }
            },
            triggerOpenCallback: function() {
                // Close main menus
                if($('header.main div.main-menus').attr('aria-hidden') === 'false') {
                    $('header.main a.main-menus').trigger('click');
                }
                // Close alerts menus
                if($('header.main div.alerts').attr('aria-hidden') === 'false') {
                    $('header.main a.alerts').trigger('click');
                }
            }
        });
        
        // Bind local preference update to language selection
        $(languageSelector).on('change', function() {
            var locale = $(this).val();
            var url = BUNDLE.config['displayPageUrlSlug'] + 'Common&callback=updateLocale';
            BUNDLE.ajax({
                cache: false,
                type: 'get',
                url: url,
                data: {"locale": locale},
                success: function(data, textStatus, jqXHR) {
                    location.reload();
                },
                error: function(jqXHR, textStatus, errorThrown) {
                    // A 401 response will be handled by the BUNDLE.ajax function
                    // so we will not handle that response here.
                    if(jqXHR.status !== 401) {
                        data = $.parseJSON(jqXHR.responseText);
                        var responseMessage;
                        $.each(data.errors, function(index, value) {
                            responseMessage = value;
                        });
                        alert(responseMessage);
                    }
                }
            });
        });
    });
})(jQuery, _);
</script>
<style type="text/css">
    header.main a.profile {
        line-height: 50px;
        float: right;
    }
    header.main a.profile img {
        display: inline-block;
        outline: none;
        vertical-align: middle;
        -webkit-border-radius: 2px;
        border-radius: 2px;
        -webkit-box-sizing: border-box;
        box-sizing: border-box;
        height: 24px;
        width: 24px;
    }
    header.main div.user-card {
        white-space: nowrap;
        display: none;
        position: absolute;
        z-index: 2040;
        background-color: white;
        top: 53px;
        right: 20px;
        border-color: rgba(0,0,0,.2);
        box-shadow: 0 2px 10px rgba(0,0,0,.2);
        -webkit-border-radius: 2px;
        border-radius: 2px;
        -webkit-user-select: text;
    }
    header.main div.user-card div.wrap {
        margin: 20px;
    }
    header.main div.user-card div.wrap a.user {
        display: inline-block;
        vertical-align: top;
        margin-right: 20px;
    }   
    header.main div.user-card div.wrap a.user img {
        display: inline-block;
        outline: none;
        vertical-align: middle;
        -webkit-border-radius: 2px;
        border-radius: 2px;
        -webkit-box-sizing: border-box;
        box-sizing: border-box;
        height: 96px;
        width: 96px;
    }
    header.main div.user-card div.wrap div.information {
        display: inline-block;
        vertical-align: top;
    }
    header.main div.user-card div.wrap div.information div.name {
        font-weight: bold;
    }
    header.main div.user-card div.wrap div.information div.profile {
        margin: 28px 0 0 0;
    }
    header.main div.user-card div.actions {
        border-top: 1px solid;
        border-color: rgba(0,0,0,.2);
        padding: 10px 0;
        width: 100%;
        display: table;
    }
    header.main div.user-card div.actions div.sign-out {
        display: table-cell;
        text-align: right;
    }
    header.main div.user-card div.actions div.sign-out a {
        margin: 0 20px;
        display: inline-block;
    }
    header.main div.user-card div.actions div.sign-out a:hover {
        text-decoration: none;
    }
    header.main a.profile div.carrot {
        border-color: transparent;
        border-bottom-color: #fff;
        border-style: dashed dashed solid;
        border-width: 0 8px 8px;
        position: absolute;
        right: 20px;
        top: 45px;
        z-index: 1;
        height: 0;
        width: 0;
    }
</style>
<%}%>