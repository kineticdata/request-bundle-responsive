<a class="main-menus color-white color-hover-secondary" tabindex="4" href="javascript:void(0)" data-target="div.main-menus" data-description="<%=ThemeLocalizer.getString(commonResourceBundle,"Navigate")%>">
    <i class="fa fa-th"></i>
</a>
<div class="main-menus background-white hide" aria-hidden="true">
    <ul class="list-unstyled clearfix"></ul>
</div>
<script type="text/javascript">
(function($, _) {
    $(function() {
        // Define qtip options for menus
        var qtipOptions = {
            content: {
                attr: 'data-description'
            },
            style: {
                classes: 'qtip-tipsy qtip-shadow',
                tip: {
                    corner: true
                }
            },
            position: {
                my: 'top center',
                at: 'bottom middle'
            }
        };
        // Setup parameters for menus
        var parentSelector = 'header.main';
        var triggerSelector = 'a.main-menus';
        var menuSelector = 'div.main-menus';
        // Start qTip
        var tooltips = $(triggerSelector).qtip(qtipOptions);
        // Get the first api element
        var api = tooltips.qtip('api');
        // Initialize menus
        BUNDLE.common.enableHeadMenus({
            'parentSelector': parentSelector,
            'triggerSelector': triggerSelector,
            'menuSelector': menuSelector,
            initializeCallback: function() {
                // Determine if package configuration available and build available links
                if(BUNDLE.config.packages) {
                    // Pluck only the "links" from config.packages to be added to the main menus ui, rejecting the profile link, and flatten
                    var linksArray = new Array();
                    _.each(_.compact(_.pluck(BUNDLE.config.packages, 'links')), function(packageLinks) {
                        // Collect all links together for sorting
                        linksArray = linksArray.concat(_.reject(_.where(packageLinks, {type: 'main-menu'}), {class: 'profile'}));
                    });
                    // Sort and iterate over links
                    _.each(_.sortBy(linksArray, function(link){ return link.sortOrder || 100; }), function(link) {
                        // Define url
                        var url = BUNDLE.config['displayPageUrlSlug'] + link['displayName'];
                        // Define params if not defined
                        var params = link.params || {};
                        // Check size and append url params
                        if(_.size(params) > 0) { url = url + '&' + $.param(params, true); }
                        // Define list element with link
                        var li = $('<li>').addClass(link['class']).append(
                            $('<a>').addClass('color-gray-darkest color-hover-secondary').attr({
                                'href': url,
                                'aria-label': BUNDLE.localize(link.description)
                            }).append(link.icon).append(
                                $('<div>').text(BUNDLE.localize(link.label))
                            )
                        );
                        // Add link to menu
                        $(menuSelector).find('ul').append(li);
                    });
                }
                // Add custom chrome webkit scroll css for anything other than mac
                if(BUNDLE.client.isMac !== undefined && !BUNDLE.client.isMac) {
                    $(parentSelector + ' ' + menuSelector).addClass('scroll');
                }
            },
            triggerOpenCallback: function() {
                // Hide qtip
                api.hide();
                // Disable qtip
                api.disable();
                // Close profile menus
                if($('header.main div.user-card').attr('aria-hidden') === 'false') {
                    $('header.main a.profile').trigger('click');
                }
            },
            triggerCloseCallback: function() {
                // Enable qTip
                api.enable();
            }
        });
    });
})(jQuery, _);
</script>
<style type="text/css">
    header.main a.main-menus {
        float: right;
        margin: 0 20px 0 0;
        padding: 8px 0 0 0;
        line-height: 42px;
    }
    header.main a.main-menus i.fa-th {
        font-size: 20px;
    }
    header.main a.main-menus:hover i.fa-th {
        cursor: pointer;
    }
    header.main a.main-menus div.carrot {
        border-color: transparent;
        border-bottom-color: #fff;
        border-style: dashed dashed solid;
        border-width: 0 8px 8px;
        position: absolute;
        right: 61px;
        top: 45px;
        z-index: 200000;
        height: 0;
        width: 0;
    }
    div.main-menus {
        display: none;
        position: absolute;
        z-index: 200000;
        top: 53px;
        right: 61px;
        border-color: rgba(0,0,0,.2);
        box-shadow: 0 2px 10px rgba(0,0,0,.2);
        -webkit-border-radius: 2px;
        border-radius: 2px;
        -webkit-user-select: text;
        max-height: 204px;
        overflow: hidden;
        overflow-y: auto;
    }
    div.main-menus ul {
        margin: 0;
        min-height: 100px;
        padding: 14px 20px 14px 14px;
        text-align: left;
        white-space: normal;
        width: 210px;
    }
    div.main-menus ul li {
        width: 88px;
        height: 88px;
        padding: 3px;
        text-align: center;
        float: left;
    }
    div.main-menus ul li a:hover {
        text-decoration: none;
    }
    div.main-menus ul li i {
        font-size: 32px;
    }
    div.main-menus ul.kapps {
        padding: 0 20px;
    }
</style>