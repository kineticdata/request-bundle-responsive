<%--
    NOTE: This file is required.
--%>
<%
    // Retrieve the survey logger that can be used to write to the kslog (useful for debugging and testing)
    Logger logger = LogHelper.getLogger();
    
    // Define system context, which is required for some queries
    HelperContext systemContext = RemedyHandler.getDefaultHelperContext();
    
    // Define url friendly slug, which is used in the urls below
    bundle.setProperty("slug", "Responsive-");
    // Define catalog attributes
    Map<String,String> catalogAttributes = CatalogAttributeHelper.getCatalogAttributeConfiguration(
        session,
        systemContext,
        customerRequest.getCatalogId()
    );
    // Loop through attributes
    for (Map.Entry<String,String> attribute : catalogAttributes.entrySet()) {
        // For now, only override the slug above if it exists as a catalog attribute
        if(attribute.getKey().equals("slug") && StringUtils.isNotBlank(attribute.getValue())) {
            bundle.setProperty(attribute.getKey(), attribute.getValue());
            break;
        }
    }
    
    // Define company name
    bundle.setProperty("companyName", "ACME");
    // Define catalog name
    bundle.setProperty("catalogName", customerRequest.getCatalogName());
    // Define display page url with slug
    bundle.setProperty("displayPageUrl", bundle.applicationPath() + "DisplayPage");
    // Define display page url with slug
    bundle.setProperty("displayPageUrlSlug", bundle.applicationPath() + "DisplayPage?name=" + bundle.getProperty("slug"));
    // Url to authentication servlet for logout
    bundle.setProperty("logoutUrl", "KSAuthenticationServlet?Logout=true");
    // This is a path to the review jsp to be used by review request.
    bundle.setProperty("reviewJsp", bundle.relativeBundlePath() + "packages/catalog/review.jsp");
    // Service Item Image Library Path
    bundle.setProperty("serviceItemImagePath", bundle.bundlePath() + "../../surveys/kineticImageLibrary/");
    // Define loader indicator image
    bundle.setProperty("loaderImageUrl", bundle.bundlePath + "common/assets/images/spinner.gif");
    
    // Loop through attributes and store them as bundle properties, which overrides any properties assigned above
    for (Map.Entry<String,String> attribute : catalogAttributes.entrySet()) {
        if(StringUtils.isNotBlank(attribute.getValue())) {
            bundle.setProperty(attribute.getKey(), attribute.getValue());
        }
    }

    // Boolean for displaying the logout link
    Boolean logoutEnabled = true;
    // Category filter for not displaying categories in the flyout navigation that are portal page specific like self help
    ArrayList<String> categoryFilter = new ArrayList<String>();
    //categoryFilter.add("Self Help");
    HashSet<String> categoryFilterHashSet = new HashSet<String>(categoryFilter);
%>